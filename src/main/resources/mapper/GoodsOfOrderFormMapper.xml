<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.usedmallserver.mapper.GoodsOfOrderFormMapper" >
  <resultMap id="BaseResultMap" type="com.example.usedmallserver.entity.GoodsOfOrderForm" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="ofid" property="ofid" jdbcType="INTEGER" />
    <result column="sid" property="sid" jdbcType="INTEGER" />
    <result column="modified" property="modified" jdbcType="TIMESTAMP" />
    <result column="quantity" property="quantity" jdbcType="INTEGER" />
    <result column="display" property="display" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, ofid, sid, modified, quantity, display
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.usedmallserver.entity.GoodsOfOrderFormExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goodsoforderform
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goodsoforderform
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goodsoforderform
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.usedmallserver.entity.GoodsOfOrderFormExample" >
    delete from goodsoforderform
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.usedmallserver.entity.GoodsOfOrderForm" >
    insert into goodsoforderform (id, ofid, sid, 
      modified, quantity, display
      )
    values (#{id,jdbcType=INTEGER}, #{ofid,jdbcType=INTEGER}, #{sid,jdbcType=INTEGER}, 
      #{modified,jdbcType=TIMESTAMP}, #{quantity,jdbcType=INTEGER}, #{display,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.usedmallserver.entity.GoodsOfOrderForm" >
    insert into goodsoforderform
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="ofid != null" >
        ofid,
      </if>
      <if test="sid != null" >
        sid,
      </if>
      <if test="modified != null" >
        modified,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
      <if test="display != null" >
        display,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ofid != null" >
        #{ofid,jdbcType=INTEGER},
      </if>
      <if test="sid != null" >
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="modified != null" >
        #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="display != null" >
        #{display,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.usedmallserver.entity.GoodsOfOrderFormExample" resultType="java.lang.Integer" >
    select count(*) from goodsoforderform
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goodsoforderform
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ofid != null" >
        ofid = #{record.ofid,jdbcType=INTEGER},
      </if>
      <if test="record.sid != null" >
        sid = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.modified != null" >
        modified = #{record.modified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.quantity != null" >
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.display != null" >
        display = #{record.display,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goodsoforderform
    set id = #{record.id,jdbcType=INTEGER},
      ofid = #{record.ofid,jdbcType=INTEGER},
      sid = #{record.sid,jdbcType=INTEGER},
      modified = #{record.modified,jdbcType=TIMESTAMP},
      quantity = #{record.quantity,jdbcType=INTEGER},
      display = #{record.display,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.usedmallserver.entity.GoodsOfOrderForm" >
    update goodsoforderform
    <set >
      <if test="ofid != null" >
        ofid = #{ofid,jdbcType=INTEGER},
      </if>
      <if test="sid != null" >
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="modified != null" >
        modified = #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="quantity != null" >
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="display != null" >
        display = #{display,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.usedmallserver.entity.GoodsOfOrderForm" >
    update goodsoforderform
    set ofid = #{ofid,jdbcType=INTEGER},
      sid = #{sid,jdbcType=INTEGER},
      modified = #{modified,jdbcType=TIMESTAMP},
      quantity = #{quantity,jdbcType=INTEGER},
      display = #{display,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>